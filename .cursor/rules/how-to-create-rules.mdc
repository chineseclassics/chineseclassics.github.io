---
description: 如何正確創建 Cursor Rules - Meta Rule（手動引用）
alwaysApply: false
---

# 如何正確創建 Cursor Rules

> 本規則指導 AI 如何為太虛幻境項目創建正確格式的 Cursor Rules

## 📋 規則文件格式

所有規則文件必須使用 **`.mdc` 格式**（MDC = Metadata + Content）

### 基本結構（建議 YAML 清單避免紅字）

```mdc
---
description: 簡短的規則描述（一句話）
globs:
  - 路徑模式  # 可選，用於 Auto Attached 規則
alwaysApply: true    # 或 false
---

# 規則標題

規則內容（Markdown 格式）
```

## 🎯 規則類型

根據 [Cursor 官方文檔](https://cursor.com/zh-Hant/docs/context/rules)，有三種規則類型：

### 1. Always（一律套用）
```yaml
alwaysApply: true
globs:
```
- **用途**：核心規範，始終需要遵守
- **範例**：語言規範、代碼規範、架構原則

### 2. Auto Attached（自動附加）
```yaml
alwaysApply: false
globs:
  - "**/supabase/**"
  - "**/*[Dd]eploy*.md"
```
- **用途**：特定路徑或文件類型的規則
- **範例**：Supabase 部署規則（僅在處理 Supabase 相關文件時啟用）

### 3. Manual（手動引用）
```yaml
alwaysApply: false
# Manual 規則通常不需要 globs，透過 @ruleName 引用
```
- **用途**：特殊情況下使用 `@ruleName` 明確引用
- **範例**：特定工作流程、範本規則

## ✅ 最佳實踐

根據 Cursor 文檔和太虛幻境項目需求：

### 1. 聚焦且可執行
- 每個規則專注於一個明確主題
- 提供具體的 ✅ 和 ❌ 範例
- 避免模糊的指引

### 2. 控制篇幅
- 將規則控制在 **500 行以內**
- 大型規則拆分為多個可組合的規則
- 使用清晰的章節結構

### 3. 提供範例
```markdown
### ✅ 正確做法
\`\`\`bash
cd story-vocab
supabase functions deploy
\`\`\`

### ❌ 錯誤做法
\`\`\`bash
cp -r story-vocab/supabase/functions supabase/
\`\`\`
```

### 4. 使用繁體中文
- 所有規則內容使用繁體中文
- 代碼範例的註釋也使用繁體中文

### 5. 文件命名
- 使用描述性名稱：`supabase-architecture.mdc`
- 使用小寫和連字符：`file-organization.mdc`
- 避免編號前綴（除非需要特定順序）

## 📂 規則組織

### 專案層級規則
```
.cursor/rules/
├── language.mdc              # Always - 語言規範
├── file-organization.mdc     # Always - 文件組織
├── coding-standards.mdc      # Always - 代碼規範
├── supabase-architecture.mdc # Auto - Supabase 架構
└── git-workflow.mdc          # Manual - Git 工作流程
```

### 巢狀規則（子目錄專屬）
```
story-vocab/
  .cursor/rules/
    story-vocab-specific.mdc  # 僅套用於 story-vocab
```

## 🛠️ 創建新規則的步驟

### 方法 1：使用 Cursor 指令
```
New Cursor Rule
```

### 方法 2：手動創建
1. 在 `.cursor/rules/` 創建新的 `.mdc` 文件
2. 添加正確的 frontmatter
3. 撰寫規則內容
4. 選擇適當的規則類型

### 方法 3：使用生成指令
在對話中使用：
```
/Generate Cursor Rules
```

## 📝 規則內容範本

```mdc
---
description: [一句話描述這個規則的目的]
globs: ["[路徑模式]"]  # 如果是 Auto Attached
alwaysApply: [true/false]
---

# [規則標題]

> [可選：規則的簡短說明或背景]

## 核心原則

- ✅ [應該做的事情]
- ❌ [不應該做的事情]

## 具體指引

### [子主題 1]

[詳細說明]

\`\`\`[語言]
# ✅ 正確範例
[代碼]
\`\`\`

\`\`\`[語言]
# ❌ 錯誤範例
[代碼]
\`\`\`

## 相關文檔

- [連結到相關架構文檔]
- [連結到相關指南]
```

## 🔍 驗證清單

創建規則後，確認：

- [ ] 文件使用 `.mdc` 擴展名
- [ ] frontmatter 格式正確（三個破折號包圍）
- [ ] `description` 清晰簡潔
- [ ] 規則類型（Always/Auto/Manual）選擇恰當
- [ ] 內容聚焦、可執行
- [ ] 篇幅控制在 500 行以內
- [ ] 包含正確/錯誤範例
- [ ] 使用繁體中文
- [ ] 文件命名描述性且小寫

## 🎯 太虛幻境特定要求

### 必須遵守的原則
1. **兩層架構**：平台級 vs 子項目級
2. **完全自包含**：子項目獨立管理資源
3. **文檔集中**：詳細文檔放在 `docs/` 內
4. **繁體中文**：所有內容使用繁體中文

### 規則應該涵蓋
- 架構決策和原則
- 文件組織規範
- 技術棧特定最佳實踐（如 Supabase）
- 工作流程和範本
- 編碼風格和標準

## 📚 參考資源

- [Cursor Rules 官方文檔](https://cursor.com/zh-Hant/docs/context/rules)
- [太虛幻境架構文檔](../../TAIXU_ARCHITECTURE.md)
- [AGENTS.md](../../AGENTS.md) - 簡化的 Agent 指令

---

**使用方式**：當需要創建新規則時，使用 `@how-to-create-rules` 引用本規則。
