---
description: Git 工作流程規範 - 用戶使用 GitHub Desktop 手動管理
alwaysApply: true
---

# Git 工作流程

## 🚨 核心原則：用戶手動管理 Git

**用戶使用 GitHub Desktop 客戶端管理所有 Git 操作**

### AI 不應該執行的命令

❌ **絕對禁止**：
```bash
git push                    # 用戶會在 GitHub Desktop 手動推送
git commit                  # 用戶會在 GitHub Desktop 手動提交
git pull                    # 用戶自己管理
git merge                   # 用戶自己管理
git checkout                # 用戶自己管理
git branch                  # 用戶自己管理
```

### AI 可以執行的命令

✅ **允許**（僅在必要時）：
```bash
git add <file>              # 暫存文件（用戶要求時）
git status                  # 查看狀態（調試時）
git diff                    # 查看差異（調試時）
git log                     # 查看歷史（調試時）
```

**重要**：即使執行 `git add`，也只是暫存文件。用戶會在 GitHub Desktop 檢查後再提交。

## 📝 提交消息建議

AI 可以**建議**提交消息（供用戶在 GitHub Desktop 使用），但不執行提交：

### 格式規範
```
類型(範圍): 簡短描述

詳細說明（可選）
```

### 類型標籤
- `feat`: 新功能
- `fix`: 修復錯誤
- `docs`: 文檔更新
- `refactor`: 代碼重構
- `style`: 樣式調整
- `test`: 測試相關
- `chore`: 其他雜項

### 好的例子
```
feat(story-vocab): 添加 Google 登入支持

- 實現獨立模式 Google OAuth
- 創建多重身份系統
- 修復 RLS 策略

參考：story-vocab/docs/AUTH_ARCHITECTURE.md
```

### 壞的例子
```
更新文件                    ❌ 太籠統
fix bug                     ❌ 沒說修復什麼
修改了代碼                   ❌ 沒說做了什麼
```

## 🌳 分支管理

### 主要分支
- `main`：穩定版本（生產環境）
- `dev`：開發版本（如需要）

### 功能分支（可選）
- 格式：`feature/功能名稱`
- 例如：`feature/google-auth`、`feature/wordlist-system`

**注意**：用戶主要在 `main` 分支直接開發，功能分支按需使用。

## 🔄 典型工作流程

1. **AI 修改代碼**
   - 使用 `write`、`search_replace` 等工具修改文件
   - 告訴用戶修改了什麼

2. **AI 可選：暫存文件**（僅在用戶要求時）
   ```bash
   git add <modified-files>
   ```

3. **AI 建議提交消息**
   > 💡 建議提交消息：
   > ```
   > feat(story-vocab): 修復 RLS 策略支持多重身份
   > 
   > - 創建 get_user_id_from_auth() 函數
   > - 更新所有表的 RLS 策略
   > ```

4. **用戶在 GitHub Desktop**
   - 檢查修改
   - 寫提交消息（可參考 AI 建議）
   - 提交
   - 推送到 GitHub

## 📋 AI 行為準則

### ✅ 應該做的
- 告訴用戶修改了哪些文件
- 建議清晰的提交消息
- 使用 `git status` 查看狀態（調試時）
- 提醒用戶在 GitHub Desktop 檢查並提交

### ❌ 不應該做的
- 不執行 `git commit`
- 不執行 `git push`
- 不執行 `git pull`
- 不執行破壞性命令（`reset --hard`、`force push` 等）
- 不修改 `.git/config`
- 不跳過 hooks（`--no-verify`）

### 💬 溝通方式

**完成代碼修改後**：
```
✅ 已完成以下修改：
- story-vocab/js/auth/standalone-auth.js
- .cursor/rules/supabase-architecture.mdc

💡 建議提交消息：
feat(story-vocab): 添加 Google 登入支持

請在 GitHub Desktop 檢查修改並提交。
```

**不要說**：
```
❌ "已提交到 Git"
❌ "已推送到 GitHub"
❌ "正在執行 git push..."
```

---

**總結**：AI 只負責修改代碼和建議提交消息，所有 Git 操作由用戶在 GitHub Desktop 手動完成。
